stages:
  - build
  - tar
  - test

# Used for ci setup in the gitlab mirror of the project:
# https://gitlab.haskell.org/haskell/haskell-language-server/-/pipelines
variables:
  # Commit of ghc/ci-images repository from which to pull Docker images
  DOCKER_REV: "9e4c540d9e4972a36291dfdf81f079f37d748890"

  CABAL_INSTALL_VERSION: 3.8.1.0

.matrix: &matrix
  matrix:
    - GHC_VERSION: 8.10.7
      CABAL_PROJECT: cabal.project
    - GHC_VERSION: 9.0.2
      CABAL_PROJECT: cabal.project
    - GHC_VERSION: 9.2.5
      CABAL_PROJECT: cabal.project
    - GHC_VERSION: 9.4.3
      CABAL_PROJECT: cabal.project
    - GHC_VERSION: 9.4.4
      CABAL_PROJECT: cabal.project

workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - if: $CI_PIPELINE_SOURCE == "web"
      when: always
    - when: never

.artifacts:
  artifacts:
    expire_in: 2 week
    paths:
      - out

.artifacts:short:
  artifacts:
    expire_in: 1 day
    paths:
      - out

.build:
  extends: .artifacts:short
  stage: build
  parallel: *matrix
  script:
    - bash .gitlab/ci.sh

.test:
  stage: test
  script:
    - bash .gitlab/test.sh

.aarch64-linux:
  tags:
    - aarch64-linux
  image: "registry.gitlab.haskell.org/ghc/ci-images/aarch64-linux-deb10:$DOCKER_REV"

.armv7-linux:
  tags:
    - armv7-linux
  image: "registry.gitlab.haskell.org/ghc/ci-images/armv7-linux-deb10:$DOCKER_REV"

.x86_64-linux-deb10:
  tags:
    - x86_64-linux
  image: "registry.gitlab.haskell.org/ghc/ci-images/x86_64-linux-deb10:$DOCKER_REV"

.x86_64-linux-deb9:
  tags:
    - x86_64-linux
  image: "registry.gitlab.haskell.org/ghc/ci-images/x86_64-linux-deb9:$DOCKER_REV"

.x86_64-linux-ubuntu18.04:
  tags:
    - x86_64-linux
  image: "ubuntu:18.04"

.x86_64-linux-ubuntu20.04:
  tags:
    - x86_64-linux
  image: "ubuntu:20.04"

.x86_64-linux-centos7:
  tags:
    - x86_64-linux
  image: "registry.gitlab.haskell.org/ghc/ci-images/x86_64-linux-centos7:$DOCKER_REV"

.x86_64-linux-fedora33:
  tags:
    - x86_64-linux
  image: "registry.gitlab.haskell.org/ghc/ci-images/x86_64-linux-fedora33:$DOCKER_REV"

.x86_64-linux-alpine:
  tags:
    - x86_64-linux
  image: "registry.gitlab.haskell.org/ghc/ci-images/x86_64-linux-alpine3_12:$DOCKER_REV"


######################
# aarch64 linux deb10
######################

build-aarch64-linux-deb10:
  extends:
    - .build
    - .aarch64-linux
  before_script:
    - sudo apt update
    - sudo apt install -y patchelf tree
  variables:
    ADD_CABAL_ARGS: ""

tar-aarch64-linux-deb10:
  extends:
    - .artifacts
    - .aarch64-linux
  stage: tar
  needs: ["build-aarch64-linux-deb10"]
  script:
    - ./.gitlab/tar.sh
  variables:
    TARBALL_ARCHIVE_SUFFIX: aarch64-deb10-linux
    TARBALL_EXT: tar.xz

test-aarch64-linux-deb10:
  extends:
    - .test
    - .aarch64-linux
  needs: ["tar-aarch64-linux-deb10"]
  before_script:
    - sudo apt update
    - sudo apt install -y tree


######################
# armv7 linux deb10
######################

build-armv7-linux-deb10:
  extends:
    - .build
    - .armv7-linux
  before_script:
    - sudo apt update
    - sudo apt install -y patchelf tree
  variables:
    ADD_CABAL_ARGS: ""

tar-armv7-linux-deb10:
  extends:
    - .artifacts
    - .armv7-linux
  stage: tar
  needs: ["build-armv7-linux-deb10"]
  script:
    - ./.gitlab/tar.sh
  variables:
    TARBALL_ARCHIVE_SUFFIX: armv7-deb10-linux
    TARBALL_EXT: tar.xz

test-armv7-linux-deb10:
  extends:
    - .test
    - .armv7-linux
  needs: ["tar-armv7-linux-deb10"]
  before_script:
    - sudo apt update
    - sudo apt install -y tree


###########################
# x86_64 linux ubuntu18.04
###########################

build-x86_64-linux-ubuntu18.04:
  extends:
    - .build
    - .x86_64-linux-ubuntu18.04
  before_script:
    - apt update
    - apt install -y build-essential curl libffi-dev libffi6 libgmp-dev libgmp10 libncurses-dev libncurses5 libtinfo5 zlib1g-dev patchelf tree
  variables:
    ADD_CABAL_ARGS: "--enable-split-sections"

tar-x86_64-linux-ubuntu18.04:
  extends:
    - .artifacts
    - .x86_64-linux-ubuntu18.04
  stage: tar
  needs: ["build-x86_64-linux-ubuntu18.04"]
  script:
    - ./.gitlab/tar.sh
  variables:
    TARBALL_ARCHIVE_SUFFIX: x86_64-ubuntu18.04-linux
    TARBALL_EXT: tar.xz
  before_script:
    - apt update
    - apt install -y make tar xz-utils curl

test-x86_64-linux-ubuntu18.04:
  extends:
    - .test
    - .x86_64-linux-ubuntu18.04
  needs: ["tar-x86_64-linux-ubuntu18.04"]
  before_script:
    - apt update
    - apt install -y tree patchelf make curl build-essential


###########################
# x86_64 linux ubuntu20.04
###########################

build-x86_64-linux-ubuntu20.04:
  extends:
    - .build
    - .x86_64-linux-ubuntu20.04
  before_script:
    - apt update
    - apt install -y build-essential curl libffi-dev libffi7 libgmp-dev libgmp10 libncurses-dev libncurses5 libtinfo5 zlib1g-dev patchelf tree
  variables:
    ADD_CABAL_ARGS: "--enable-split-sections"

tar-x86_64-linux-ubuntu20.04:
  extends:
    - .artifacts
    - .x86_64-linux-ubuntu20.04
  stage: tar
  needs: ["build-x86_64-linux-ubuntu20.04"]
  script:
    - ./.gitlab/tar.sh
  variables:
    TARBALL_ARCHIVE_SUFFIX: x86_64-ubuntu20.04-linux
    TARBALL_EXT: tar.xz
  before_script:
    - apt update
    - apt install -y make tar xz-utils curl

test-x86_64-linux-ubuntu20.04:
  extends:
    - .test
    - .x86_64-linux-ubuntu20.04
  needs: ["tar-x86_64-linux-ubuntu20.04"]
  before_script:
    - apt update
    - apt install -y tree patchelf make curl build-essential


######################
# x86_64 linux deb10
######################

build-x86_64-linux-deb10:
  extends:
    - .build
    - .x86_64-linux-deb10
  before_script:
    - sudo apt update
    - sudo apt install -y patchelf tree
  variables:
    ADD_CABAL_ARGS: "--enable-split-sections"

tar-x86_64-linux-deb10:
  extends:
    - .artifacts
    - .x86_64-linux-deb10
  stage: tar
  needs: ["build-x86_64-linux-deb10"]
  script:
    - ./.gitlab/tar.sh
  variables:
    TARBALL_ARCHIVE_SUFFIX: x86_64-deb10-linux
    TARBALL_EXT: tar.xz

test-x86_64-linux-deb10:
  extends:
    - .test
    - .x86_64-linux-deb10
  needs: ["tar-x86_64-linux-deb10"]
  before_script:
    - sudo apt update
    - sudo apt install -y tree

######################
# x86_64 linux deb9
######################

build-x86_64-linux-deb9:
  extends:
    - .build
    - .x86_64-linux-deb9
  before_script:
    - sudo apt update
    - sudo apt install -y patchelf tree
  variables:
    ADD_CABAL_ARGS: "--enable-split-sections"

tar-x86_64-linux-deb9:
  extends:
    - .artifacts
    - .x86_64-linux-deb9
  stage: tar
  needs: ["build-x86_64-linux-deb9"]
  script:
    - ./.gitlab/tar.sh
  variables:
    TARBALL_ARCHIVE_SUFFIX: x86_64-deb9-linux
    TARBALL_EXT: tar.xz

test-x86_64-linux-deb9:
  extends:
    - .test
    - .x86_64-linux-deb9
  needs: ["tar-x86_64-linux-deb9"]
  before_script:
    - sudo apt update
    - sudo apt install -y tree

######################
# x86_64 linux centos7
######################

build-x86_64-linux-centos7:
  extends:
    - .build
    - .x86_64-linux-centos7
  before_script:
    - sudo yum install -y epel-release
    - sudo yum install -y patchelf tree
  variables:
    ADD_CABAL_ARGS: "--enable-split-sections"

tar-x86_64-linux-centos7:
  extends:
    - .artifacts
    - .x86_64-linux-centos7
  stage: tar
  needs: ["build-x86_64-linux-centos7"]
  script:
    - ./.gitlab/tar.sh
  variables:
    TARBALL_ARCHIVE_SUFFIX: x86_64-centos7-linux
    TARBALL_EXT: tar.xz

test-x86_64-linux-centos7:
  extends:
    - .test
    - .x86_64-linux-centos7
  needs: ["tar-x86_64-linux-centos7"]
  before_script:
    - sudo yum install -y tree

######################
# x86_64 linux fedora33
######################

build-x86_64-linux-fedora33:
  extends:
    - .build
    - .x86_64-linux-fedora33
  before_script:
    - sudo dnf install -y patchelf tree
  variables:
    ADD_CABAL_ARGS: "--enable-split-sections"

tar-x86_64-linux-fedora33:
  extends:
    - .artifacts
    - .x86_64-linux-fedora33
  stage: tar
  needs: ["build-x86_64-linux-fedora33"]
  script:
    - ./.gitlab/tar.sh
  variables:
    TARBALL_ARCHIVE_SUFFIX: x86_64-fedora33-linux
    TARBALL_EXT: tar.xz

test-x86_64-linux-fedora33:
  extends:
    - .test
    - .x86_64-linux-fedora33
  needs: ["tar-x86_64-linux-fedora33"]
  before_script:
    - sudo dnf install -y tree


######################
# x86_64 linux alpine
######################

build-x86_64-linux-alpine:
  extends:
    - .build
    - .x86_64-linux-alpine
  before_script:
    - sudo apk add --no-cache tar zlib zlib-dev zlib-static bzip2 bzip2-dev bzip2-static gmp gmp-dev xz xz-dev ncurses-static patchelf findutils tree
  variables:
    ADD_CABAL_ARGS: "--enable-split-sections --enable-executable-static"

tar-x86_64-linux-alpine:
  extends:
    - .artifacts
    - .x86_64-linux-alpine
  stage: tar
  needs: ["build-x86_64-linux-alpine"]
  before_script:
    - sudo apk add --no-cache tar zlib zlib-dev zlib-static bzip2 bzip2-dev bzip2-static gmp gmp-dev xz xz-dev ncurses-static
  script:
    - ./.gitlab/tar.sh
  variables:
    TARBALL_ARCHIVE_SUFFIX: x86_64-alpine3.12-linux
    TARBALL_EXT: tar.xz

test-x86_64-linux-alpine:
  extends:
    - .test
    - .x86_64-linux-alpine
  needs: ["tar-x86_64-linux-alpine"]
  before_script:
    - sudo apk add --no-cache tar zlib zlib-dev zlib-static bzip2 bzip2-dev bzip2-static gmp gmp-dev xz xz-dev ncurses-static tree


######################
# x86_64 freebsd 12
######################

build-x86_64-freebsd12:
  extends: .build
  before_script:
    - sudo pkg update
    - sudo pkg install --yes patchelf gmake tree binutils
  tags:
    - x86_64-freebsd12
  variables:
    ADD_CABAL_ARGS: "--enable-split-sections -j1"

tar-x86_64-freebsd12:
  extends: .artifacts
  stage: tar
  needs: ["build-x86_64-freebsd12"]
  tags:
    - x86_64-freebsd12
  script:
    - ./.gitlab/tar.sh
  variables:
    TARBALL_ARCHIVE_SUFFIX: x86_64-unknown-freebsd12
    TARBALL_EXT: tar.xz

test-x86_64-freebsd12:
  extends: .test
  needs: ["tar-x86_64-freebsd12"]
  tags:
    - x86_64-freebsd12
  before_script:
    - sudo pkg update
    - sudo pkg install --yes patchelf gmake tree binutils


######################
# x86_64 freebsd 13
######################

build-x86_64-freebsd13:
  extends: .build
  tags:
    - x86_64-freebsd13
  before_script:
    - sudo pkg update
    - sudo pkg install --yes compat12x-amd64 patchelf gmake tree binutils
    - sudo ln -s libncurses.so.6 /usr/local/lib/libncurses.so.6.2
  variables:
    ADD_CABAL_ARGS: "--enable-split-sections -j1"

tar-x86_64-freebsd13:
  extends: .artifacts
  stage: tar
  needs: ["build-x86_64-freebsd13"]
  tags:
    - x86_64-freebsd13
  script:
    - ./.gitlab/tar.sh
  variables:
    TARBALL_ARCHIVE_SUFFIX: x86_64-unknown-freebsd13
    TARBALL_EXT: tar.xz

test-x86_64-freebsd13:
  extends: .test
  needs: ["tar-x86_64-freebsd13"]
  tags:
    - x86_64-freebsd13
  before_script:
    - sudo pkg update
    - sudo pkg install --yes compat12x-amd64 gmake tree binutils
    - sudo ln -s libncurses.so.6 /usr/local/lib/libncurses.so.6.2


######################
# x86_64 darwin
######################

build-x86_64-darwin:
  extends: .build
  tags:
    - x86_64-darwin-m1
  variables:
    ADD_CABAL_ARGS: ""
    NIX_SYSTEM: x86_64-darwin
  script: |
    /bin/bash ./.gitlab/ci.sh

tar-x86_64-darwin:
  extends: .artifacts
  stage: tar
  needs: ["build-x86_64-darwin"]
  tags:
    - x86_64-darwin-m1
  script: |
    /bin/bash ./.gitlab/tar.sh
  variables:
    TARBALL_ARCHIVE_SUFFIX: x86_64-apple-darwin
    TARBALL_EXT: tar.xz
    NIX_SYSTEM: x86_64-darwin

test-x86_64-darwin:
  extends: .test
  needs: ["tar-x86_64-darwin"]
  tags:
    - x86_64-darwin-m1
  script: |
    /bin/bash .gitlab/test.sh
  variables:
    NIX_SYSTEM: x86_64-darwin


######################
# aarch64 darwin
######################

build-aarch64-darwin:
  extends: .build
  stage: build
  tags:
    - aarch64-darwin-m1
  script: |
    arch -arm64 /bin/bash ./.gitlab/ci.sh
  variables:
    MACOSX_DEPLOYMENT_TARGET: "10.7"
    ADD_CABAL_ARGS: ""
    NIX_SYSTEM: aarch64-darwin

tar-aarch64-darwin:
  extends: .artifacts
  stage: tar
  needs: ["build-aarch64-darwin"]
  tags:
    - aarch64-darwin-m1
  script:
    - arch -arm64 /bin/bash ./.gitlab/tar.sh
  variables:
    TARBALL_ARCHIVE_SUFFIX: aarch64-apple-darwin
    TARBALL_EXT: tar.xz
    NIX_SYSTEM: aarch64-darwin

test-aarch64-darwin:
  extends: .test
  needs: ["tar-aarch64-darwin"]
  tags:
    - aarch64-darwin-m1
  script: |
    arch -arm64 /bin/bash ./.gitlab/test.sh
  variables:
    NIX_SYSTEM: aarch64-darwin


######################
# x86_64 windows
######################

build-x86_64-windows:
  extends: .build
  tags:
    - new-x86_64-windows
  script:
    - $env:CHERE_INVOKING = "yes"
    - bash '-lc' "ADD_CABAL_ARGS=$env:ADD_CABAL_ARGS GHC_VERSION=$env:GHC_VERSION CABAL_INSTALL_VERSION=$CABAL_INSTALL_VERSION .gitlab/ci.sh"
  variables:
    ADD_CABAL_ARGS: ""

tar-x86_64-windows:
  extends: .artifacts
  stage: tar
  needs: ["build-x86_64-windows"]
  tags:
    - new-x86_64-windows
  script:
    - $env:CHERE_INVOKING = "yes"
    - bash '-lc' "TARBALL_ARCHIVE_SUFFIX=$env:TARBALL_ARCHIVE_SUFFIX TARBALL_EXT=$env:TARBALL_EXT .gitlab/tar.sh"
  variables:
    TARBALL_ARCHIVE_SUFFIX: x86_64-unknown-mingw32
    TARBALL_EXT: zip
