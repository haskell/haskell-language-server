{
    "haskell.plugin.alternateNumberFormat.globalOn": {
        "default": true,
        "description": "Enables alternateNumberFormat plugin",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.cabal.codeActionsOn": {
        "default": true,
        "description": "Enables cabal code actions",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.cabal.completionOn": {
        "default": true,
        "description": "Enables cabal completions",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.callHierarchy.globalOn": {
        "default": true,
        "description": "Enables callHierarchy plugin",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.changeTypeSignature.globalOn": {
        "default": true,
        "description": "Enables changeTypeSignature plugin",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.eval.config.diff": {
        "default": true,
        "markdownDescription": "Enable the diff output (WAS/NOW) of eval lenses",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.eval.config.exception": {
        "default": false,
        "markdownDescription": "Enable marking exceptions with `*** Exception:` similarly to doctest and GHCi.",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.eval.globalOn": {
        "default": true,
        "description": "Enables eval plugin",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.explicit-fields.globalOn": {
        "default": true,
        "description": "Enables explicit-fields plugin",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.explicit-fixity.globalOn": {
        "default": true,
        "description": "Enables explicit-fixity plugin",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.fourmolu.config.external": {
        "default": false,
        "markdownDescription": "Call out to an external \"fourmolu\" executable, rather than using the bundled library",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.ghcide-completions.config.autoExtendOn": {
        "default": true,
        "markdownDescription": "Extends the import list automatically when completing a out-of-scope identifier",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.ghcide-completions.config.snippetsOn": {
        "default": true,
        "markdownDescription": "Inserts snippets when using code completions",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.ghcide-completions.globalOn": {
        "default": true,
        "description": "Enables ghcide-completions plugin",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.ghcide-hover-and-symbols.hoverOn": {
        "default": true,
        "description": "Enables ghcide-hover-and-symbols hover",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.ghcide-hover-and-symbols.symbolsOn": {
        "default": true,
        "description": "Enables ghcide-hover-and-symbols symbols",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.ghcide-type-lenses.config.mode": {
        "default": "always",
        "description": "Control how type lenses are shown",
        "enum": [
            "always",
            "exported",
            "diagnostics"
        ],
        "enumDescriptions": [
            "Always displays type lenses of global bindings",
            "Only display type lenses of exported global bindings",
            "Follows error messages produced by GHC about missing signatures"
        ],
        "scope": "resource",
        "type": "string"
    },
    "haskell.plugin.ghcide-type-lenses.globalOn": {
        "default": true,
        "description": "Enables ghcide-type-lenses plugin",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.importLens.codeActionsOn": {
        "default": true,
        "description": "Enables importLens code actions",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.importLens.codeLensOn": {
        "default": true,
        "description": "Enables importLens code lenses",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.moduleName.globalOn": {
        "default": true,
        "description": "Enables moduleName plugin",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.ormolu.config.external": {
        "default": false,
        "markdownDescription": "Call out to an external \"ormolu\" executable, rather than using the bundled library",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.overloaded-record-dot.globalOn": {
        "default": true,
        "description": "Enables overloaded-record-dot plugin",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.pragmas-completion.globalOn": {
        "default": true,
        "description": "Enables pragmas-completion plugin",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.pragmas-disable.globalOn": {
        "default": true,
        "description": "Enables pragmas-disable plugin",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.pragmas-suggest.globalOn": {
        "default": true,
        "description": "Enables pragmas-suggest plugin",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.qualifyImportedNames.globalOn": {
        "default": true,
        "description": "Enables qualifyImportedNames plugin",
        "scope": "resource",
        "type": "boolean"
    },
    "haskell.plugin.stan.globalOn": {
        "default": true,
        "description": "Enables stan plugin",
        "scope": "resource",
        "type": "boolean"
    }
}
