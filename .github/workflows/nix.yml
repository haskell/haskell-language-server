name: Nix

on:
  pull_request:
    branches:
      - '**'

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: true
          paths_ignore: '["**/docs/**", "**.md", "**/LICENSE", ".circleci/**", "install/**"]'

  nix:
    needs: pre_job
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      uses: actions/checkout@v2
      with:
        submodules: true
    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      uses: cachix/install-nix-action@v13
      with:
        install_url: https://nixos-nix-install-tests.cachix.org/serve/lb41az54kzk6j12p81br4bczary7m145/install
        install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
        extra_nix_config: |
          experimental-features = nix-command flakes
        nix_path: nixpkgs=channel:nixos-unstable
    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      uses: cachix/cachix-action@v8
      with:
        name: haskell-language-server
        authToken: ${{ secrets.HLS_CACHIX_AUTH_TOKEN }}
    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: nix build
    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: nix develop --profile dev && cachix push haskell-language-server dev
    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: nix path-info --json | jq -r '.[].path' | cachix push haskell-language-server
