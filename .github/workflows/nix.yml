name: Nix

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - master

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip_develop: ${{ steps.skip_check.outputs.should_skip }}
      should_skip_build: ${{ steps.skip_check_no_nix.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: true
          paths_ignore: '["**/docs/**", "**.md", "**/LICENSE", ".circleci/**", "install/**"]'
      - id: skip_check_no_nix
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: false
          paths: '["**.nix"]'

  # Enter the development shell and run `cabal build`
  develop:
    needs: pre_job
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
    - if: ${{ needs.pre_job.outputs.should_skip_develop != 'true' }}
      uses: actions/checkout@v2
      with:
        submodules: true
    - if: ${{ needs.pre_job.outputs.should_skip_develop != 'true' }}
      uses: cachix/install-nix-action@v13
      with:
        install_url: https://nixos-nix-install-tests.cachix.org/serve/i6laym9jw3wg9mw6ncyrk6gjx4l34vvx/install
        install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
        extra_nix_config: |
          experimental-features = nix-command flakes
        nix_path: nixpkgs=channel:nixos-unstable
    - if: ${{ needs.pre_job.outputs.should_skip_develop != 'true' }}
      uses: cachix/cachix-action@v10
      with:
        name: haskell-language-server
        # Disable pushing, we will do that in job `build`
        skipPush: true
    - if: ${{ needs.pre_job.outputs.should_skip_develop != 'true' }}
      run: |
        nix develop --command cabal update
        nix develop --command cabal build

  # Build and then push HLS binaries with developmet shell to cachix
  # This job runs when
  #   1. PRs are merged to master (runs on master)
  #   2. Nix files are changed (runs on PR)
  build:
    needs: pre_job
    runs-on: ${{ matrix.os }}
    env:
      HAS_TOKEN: ${{ secrets.HLS_CACHIX_AUTH_TOKEN != '' }}
    if: ${{ needs.pre_job.outputs.should_skip_build != 'true' || (github.repository_owner == 'haskell' && github.ref == 'refs/heads/master') }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: cachix/install-nix-action@v13
      with:
        install_url: https://nixos-nix-install-tests.cachix.org/serve/i6laym9jw3wg9mw6ncyrk6gjx4l34vvx/install
        install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
        extra_nix_config: |
          experimental-features = nix-command flakes
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v10
      with:
        name: haskell-language-server
        authToken: ${{ secrets.HLS_CACHIX_AUTH_TOKEN }}
    - name: Build development shell
      run: nix develop --profile dev
    - name: Build development shell (GHC 9.0.1)
      run: nix develop .#haskell-language-server-901-dev --profile dev
    - name: Push development shell
      if: ${{ env.HAS_TOKEN == 'true' }}
      run: cachix push haskell-language-server dev
    - name: Build binaries
      run: nix build
    - name: Build binaries (GHC 9.0.1)
      run: nix build .#haskell-language-server-901
    - name: Push binaries
      if: ${{ env.HAS_TOKEN == 'true' }}
      run: nix path-info --json | jq -r '.[].path' | cachix push haskell-language-server
