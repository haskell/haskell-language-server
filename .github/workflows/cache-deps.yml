name: Caching of dependencies

#  2021-11-30: NOTE: This workflow currently a trimmed copy of a main `test.yml` workflow. Workflows need further deduplication: https://docs.github.com/en/actions/learn-github-actions/reusing-workflows#overview

defaults:
  run:
    shell: bash

# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency.
concurrency:
  group: ${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
  schedule:
    # Try to save snapshot every day at 08:25 UTC (~00:25 in California)
    - cron: "25 8 * * *"

jobs:

  deps:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: ["9.0.1", '8.10.7', '8.10.6', "8.10.5", "8.8.4", "8.8.3", "8.6.5"]
        os: [ubuntu-latest, macOS-latest, windows-latest]
        exclude:
          - os: windows-latest
            ghc: '8.8.3'

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: haskell/actions/setup@v1
        id: HaskEnvSetup
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: "3.4"

      - if: runner.os == 'Windows'
        name: (Windows) Platform config
        run: |
          echo "CABAL_PKGS_DIR=~\\AppData\\cabal\\packages" >> $GITHUB_ENV

      - if: ( runner.os == 'Linux' ) || ( runner.os == 'macOS' )
        name: (Linux,macOS) Platform config
        run: |
          echo "CABAL_PKGS_DIR=~/.cabal/packages" >> $GITHUB_ENV

      - if: matrix.os == 'macOS-latest' && matrix.ghc == '8.10.5'
        name: Workaround for GHC 8.10.5 on macOS
        run: |
          echo "# uninstalling CommandLineTools (see https://github.com/haskell/haskell-language-server/issues/1913#issuecomment-861667786)"
          sudo rm -rf /Library/Developer/CommandLineTools

      # Needs to be before Cache Cabal so the cache can detect changes to the modified cabal.project file
      - if: matrix.ghc == '9.0.1'
        name: Use modified cabal.project for ghc9
        run: cp cabal-ghc901.project cabal.project

      - if: matrix.ghc == '8.8.4' && matrix.os == 'windows-latest'
        name: Modify cabal.project to workaround segfaults for ghc-8.8.4 and windows
        run: |
          echo "package floskell" >> cabal.project
          echo "  ghc-options: -O0" >> cabal.project

      - name: Cache Cabal
        uses: actions/cache@v2
        env:
          cache-name: cache-cabal
        with:
          path: |
            ${{ steps.HaskEnvSetup.outputs.cabal-store }}
            ${{ env.CABAL_PKGS_DIR }}
          key: v2-${{ runner.os }}-${{ matrix.ghc }}-build-${{ hashFiles('cabal.project') }}
          restore-keys: v2-${{ runner.os }}-${{ matrix.ghc }}-build-

      - run: cabal update

      # Work around for filepath length limits in Windows
      - if: runner.os == 'Windows'
        name: (Windows) Shorten binary names
        run: |
          sed -i.bak -e 's/haskell-language-server/hls/g' \
                     -e 's/haskell_language_server/hls/g' \
                     haskell-language-server.cabal cabal.project
          sed -i.bak -e 's/Paths_haskell_language_server/Paths_hls/g' \
                     src/**/*.hs exe/*.hs

      - name: Build
        run: cabal v2-build --enable-tests --enable-benchmarks --only-dependencies

      # repeating builds to workaround segfaults in windows and ghc-8.8.4
      - if: runner.os == 'Windows'
        name: (Windows) Run build additional 2 times
        run: cabal v2-build --enable-tests --enable-benchmarks --only-dependencies || cabal v2-build --enable-tests --enable-benchmarks --only-dependencies
