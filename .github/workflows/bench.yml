name: Benchmark

on:
  pull_request:
    branches:
      - '**'

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.0
        with:
          cancel_others: true
          paths_ignore: '["**/docs/**", "**.md", "**/LICENSE", ".circleci/**", "install/**", "**.nix", "**/test/**", "flake.lock"]'

  bench-init:
    needs: pre_job
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        ghc: ['8.10.4']
        os: [ubuntu-latest]

    steps:
    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      uses: actions/checkout@v2
    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: git fetch origin master # check the master branch for benchmarking
    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      uses: haskell/actions/setup@v1
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: '3.2'
        enable-stack: false

    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      name: Cache Cabal
      uses: actions/cache@v2
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
        key: v2-${{ runner.os }}-${{ matrix.ghc }}-bench-${{ hashFiles('cabal.project') }}
        restore-keys: |
            v2-${{ runner.os }}-${{ matrix.ghc }}-build-${{ hashFiles('cabal.project') }}
            v2-${{ runner.os }}-${{ matrix.ghc }}-bench-
            v2-${{ runner.os }}-${{ matrix.ghc }}

    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: cabal update

    # max-backjumps is increased as a temporary solution
    # for dependency resolution failure
    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: cabal configure --enable-benchmarks --max-backjumps 12000

    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      name: Build
      shell: bash
      run: cabal build ghcide:benchHist

    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      name: Bench init
      shell: bash
      run: cabal bench ghcide:benchHist  -j --benchmark-options="all-binaries"

    # tar is required to preserve file permissions
    # compression speeds up upload/download nicely
    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      name: tar workspace
      shell: bash
      run: tar -czf workspace.tar.gz * .git

    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      name: tar cabal
      run: |
        cd ~/.cabal
        tar -czf cabal.tar.gz *

    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      name: Upload workspace
      uses: actions/upload-artifact@v2
      with:
        name: workspace
        retention-days: 1
        path: workspace.tar.gz

    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      name: Upload .cabal
      uses: actions/upload-artifact@v2
      with:
        name: cabal-home
        retention-days: 1
        path: ~/.cabal/cabal.tar.gz

  bench-example:
    needs: [bench-init, pre_job]
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        ghc: ['8.10.4']
        os: [ubuntu-latest]
        example: ['Cabal-3.0.0.0', 'lsp-types-1.0.0.1']

    steps:
    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      uses: haskell/actions/setup@v1
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: '3.2'
        enable-stack: false

    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      name: Download cabal home
      uses: actions/download-artifact@v2
      with:
        name: cabal-home
        path: .

    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      name: Download workspace
      uses: actions/download-artifact@v2
      with:
        name: workspace
        path: .

    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      name: untar
      run: |
        mkdir -p ~/.cabal
        tar xzf workspace.tar.gz
        tar xzf cabal.tar.gz --directory ~/.cabal

    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      name: Bench
      shell: bash
      run: cabal bench ghcide:benchHist  -j --benchmark-options="${{ matrix.example }}"

    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      name: Display results
      shell: bash
      run: |
        column -s, -t < ghcide/bench-results/unprofiled/${{ matrix.example }}/results.csv | tee ghcide/bench-results/unprofiled/${{ matrix.example }}/results.txt

    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      name: Archive benchmarking artifacts
      uses: actions/upload-artifact@v2
      with:
        name: bench-results-${{ runner.os }}-${{ matrix.ghc }}
        path: |
           ghcide/bench-results/results.*
           ghcide/bench-results/**/*.csv
           ghcide/bench-results/**/*.svg
           ghcide/bench-results/**/*.eventlog.html

    - if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      name: Archive benchmark logs
      uses: actions/upload-artifact@v2
      with:
        name: bench-logs-${{ runner.os }}-${{ matrix.ghc }}
        path: |
           ghcide/bench-results/**/*.log
           ghcide/bench-results/**/*.eventlog
           ghcide/bench-results/**/*.hp
