([],Right (GenericPackageDescription {packageDescription = PackageDescription {specVersion = CabalSpecV3_0, package = PackageIdentifier {pkgName = PackageName "hls-cabal-plugin", pkgVersion = mkVersion [0,1,0,0]}, licenseRaw = Left (License (ELicense (ELicenseId MIT) Nothing)), licenseFiles = [SymbolicPath "LICENSE"], copyright = "", maintainer = "fendor@posteo.de", author = "Fendor", stability = "", testedWith = [], homepage = "", pkgUrl = "", bugReports = "", sourceRepos = [], synopsis = "", description = "", category = "Development", customFieldsPD = [], buildTypeRaw = Nothing, setupBuildInfo = Nothing, library = Nothing, subLibraries = [], executables = [], foreignLibs = [], testSuites = [], benchmarks = [], dataFiles = [], dataDir = ".", extraSrcFiles = ["CHANGELOG.md"], extraTmpFiles = [], extraDocFiles = []}, gpdScannedVersion = Nothing, genPackageFlags = [], condLibrary = Just (CondNode {condTreeData = Library {libName = LMainLibName, exposedModules = [ModuleName "IDE.Plugin.Cabal"], reexportedModules = [], signatures = [], libExposed = True, libVisibility = LibraryVisibilityPublic, libBuildInfo = BuildInfo {buildable = True, buildTools = [], buildToolDepends = [], cppOptions = [], asmOptions = [], cmmOptions = [], ccOptions = [], cxxOptions = [], ldOptions = [], hsc2hsOptions = [], pkgconfigDepends = [], frameworks = [], extraFrameworkDirs = [], asmSources = [], cmmSources = [], cSources = [], cxxSources = [], jsSources = [], hsSourceDirs = [SymbolicPath "src"], otherModules = [], virtualModules = [], autogenModules = [], defaultLanguage = Just Haskell2010, otherLanguages = [], defaultExtensions = [], otherExtensions = [], oldExtensions = [], extraLibs = [], extraGHCiLibs = [], extraBundledLibs = [], extraLibFlavours = [], extraDynLibFlavours = [], extraLibDirs = [], includeDirs = [], includes = [], autogenIncludes = [], installIncludes = [], options = PerCompilerFlavor [] [], profOptions = PerCompilerFlavor [] [], sharedOptions = PerCompilerFlavor [] [], staticOptions = PerCompilerFlavor [] [], customFieldsBI = [], targetBuildDepends = [Dependency (PackageName "base") (MajorBoundVersion (mkVersion [4,14,3,0])) (fromNonEmpty (LMainLibName :| []))], mixins = []}}, condTreeConstraints = [Dependency (PackageName "base") (MajorBoundVersion (mkVersion [4,14,3,0])) (fromNonEmpty (LMainLibName :| []))], condTreeComponents = []}), condSubLibraries = [], condForeignLibs = [], condExecutables = [], condTestSuites = [(UnqualComponentName "hls-cabal-plugin-test",CondNode {condTreeData = TestSuite {testName = UnqualComponentName "", testInterface = TestSuiteExeV10 (mkVersion [1,0]) "Main.hs", testBuildInfo = BuildInfo {buildable = True, buildTools = [], buildToolDepends = [], cppOptions = [], asmOptions = [], cmmOptions = [], ccOptions = [], cxxOptions = [], ldOptions = [], hsc2hsOptions = [], pkgconfigDepends = [], frameworks = [], extraFrameworkDirs = [], asmSources = [], cmmSources = [], cSources = [], cxxSources = [], jsSources = [], hsSourceDirs = [SymbolicPath "test"], otherModules = [], virtualModules = [], autogenModules = [], defaultLanguage = Just Haskell2010, otherLanguages = [], defaultExtensions = [], otherExtensions = [], oldExtensions = [], extraLibs = [], extraGHCiLibs = [], extraBundledLibs = [], extraLibFlavours = [], extraDynLibFlavours = [], extraLibDirs = [], includeDirs = [], includes = [], autogenIncludes = [], installIncludes = [], options = PerCompilerFlavor [] [], profOptions = PerCompilerFlavor [] [], sharedOptions = PerCompilerFlavor [] [], staticOptions = PerCompilerFlavor [] [], customFieldsBI = [], targetBuildDepends = [Dependency (PackageName "base") (MajorBoundVersion (mkVersion [4,14,3,0])) (fromNonEmpty (LMainLibName :| []))], mixins = []}}, condTreeConstraints = [Dependency (PackageName "base") (MajorBoundVersion (mkVersion [4,14,3,0])) (fromNonEmpty (LMainLibName :| []))], condTreeComponents = []})], condBenchmarks = []}))