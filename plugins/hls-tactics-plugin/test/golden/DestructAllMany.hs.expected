data ABC = A | B | C

many :: () -> Either a b -> Bool -> Maybe ABC -> ABC -> ()
many () (Left a) False Nothing A = _0
many () (Right b5) False Nothing A = _1
many () (Left a) True Nothing A = _2
many () (Right b5) True Nothing A = _3
many () (Left a6) False (Just a) A = _4
many () (Right b6) False (Just a) A = _5
many () (Left a6) True (Just a) A = _6
many () (Right b6) True (Just a) A = _7
many () (Left a) False Nothing B = _8
many () (Right b5) False Nothing B = _9
many () (Left a) True Nothing B = _10
many () (Right b5) True Nothing B = _11
many () (Left a6) False (Just a) B = _12
many () (Right b6) False (Just a) B = _13
many () (Left a6) True (Just a) B = _14
many () (Right b6) True (Just a) B = _15
many () (Left a) False Nothing C = _16
many () (Right b5) False Nothing C = _17
many () (Left a) True Nothing C = _18
many () (Right b5) True Nothing C = _19
many () (Left a6) False (Just a) C = _20
many () (Right b6) False (Just a) C = _21
many () (Left a6) True (Just a) C = _22
many () (Right b6) True (Just a) C = _23
